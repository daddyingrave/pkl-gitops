/// Kustomization is the Schema for the kustomizations API.
///
/// This module was generated from the CustomResourceDefinition at
/// <https://raw.githubusercontent.com/fluxcd/kustomize-controller/refs/tags/v1.4.0/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml>.
module io.fluxcd.toolkit.kustomize.v1.Kustomization

extends "package://pkg.pkl-lang.org/pkl-k8s/k8s@1.1.1#/K8sResource.pkl"

import "package://pkg.pkl-lang.org/pkl-k8s/k8s@1.1.1#/apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl"

fixed apiVersion: "kustomize.toolkit.fluxcd.io/v1"

fixed kind: "Kustomization"

/// Standard object's metadata.
///
/// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata>.
metadata: ObjectMeta?

/// KustomizationSpec defines the configuration to calculate the desired state from a Source using
/// Kustomize.
spec: Spec?

/// KustomizationStatus defines the observed state of a kustomization.
///
/// Default if undefined: `{ ["observedGeneration"] = -1 }`
status: Status?

/// KustomizationSpec defines the configuration to calculate the desired state from a Source using
/// Kustomize.
class Spec {
  /// CommonMetadata specifies the common labels and annotations that are applied to all resources. Any
  /// existing label or annotation will be overridden if its key matches a common one.
  commonMetadata: CommonMetadata?

  /// Components specifies relative paths to specifications of other Components.
  components: Listing<String>?

  /// Decrypt Kubernetes secrets before applying them on the cluster.
  decryption: Decryption?

  /// DependsOn may contain a meta.NamespacedObjectReference slice with references to Kustomization
  /// resources that must be ready before this Kustomization can be reconciled.
  dependsOn: Listing<DependsOn>?

  /// Force instructs the controller to recreate resources when patching fails due to an immutable field
  /// change.
  ///
  /// Default if undefined: `false`
  force: Boolean?

  /// A list of resources to be included in the health assessment.
  healthChecks: Listing<HealthCheck>?

  /// Images is a list of (image name, new name, new tag or digest) for changing image names, tags or
  /// digests. This can also be achieved with a patch, but this operator is simpler to specify.
  images: Listing<Image>?

  /// The interval at which to reconcile the Kustomization. This interval is approximate and may be
  /// subject to jitter to ensure efficient use of resources.
  interval: String(matches(Regex(#"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$"#)))

  /// The KubeConfig for reconciling the Kustomization on a remote cluster. When used in combination with
  /// KustomizationSpec.ServiceAccountName, forces the controller to act on behalf of that Service
  /// Account at the target cluster. If the --default-service-account flag is set, its value will be used
  /// as a controller level fallback for when KustomizationSpec.ServiceAccountName is empty.
  kubeConfig: KubeConfig?

  /// NamePrefix will prefix the names of all managed resources.
  namePrefix: String(length.isBetween(1, 200))?

  /// NameSuffix will suffix the names of all managed resources.
  nameSuffix: String(length.isBetween(1, 200))?

  /// Strategic merge and JSON patches, defined as inline YAML objects, capable of targeting objects
  /// based on kind, label and annotation selectors.
  patches: Listing<Patch>?

  /// Path to the directory containing the kustomization.yaml file, or the set of plain YAMLs a
  /// kustomization.yaml should be generated for. Defaults to 'None', which translates to the root path
  /// of the SourceRef.
  path: String?

  /// PostBuild describes which actions to perform on the YAML manifest generated by building the
  /// kustomize overlay.
  postBuild: PostBuild?

  /// Prune enables garbage collection.
  prune: Boolean

  /// The interval at which to retry a previously failed reconciliation. When not specified, the
  /// controller uses the KustomizationSpec.Interval value to retry failures.
  retryInterval: String(matches(Regex(#"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$"#)))?

  /// The name of the Kubernetes service account to impersonate when reconciling this Kustomization.
  serviceAccountName: String?

  /// Reference of the source where the kustomization file is.
  sourceRef: SourceRef

  /// This flag tells the controller to suspend subsequent kustomize executions, it does not apply to
  /// already started executions. Defaults to false.
  suspend: Boolean?

  /// TargetNamespace sets or overrides the namespace in the kustomization.yaml file.
  targetNamespace: String(length.isBetween(1, 63))?

  /// Timeout for validation, apply and health checking operations. Defaults to 'Interval' duration.
  timeout: String(matches(Regex(#"^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$"#)))?

  /// Wait instructs the controller to check the health of all the reconciled resources. When enabled,
  /// the HealthChecks are ignored. Defaults to false.
  wait: Boolean?
}

/// CommonMetadata specifies the common labels and annotations that are applied to all resources. Any
/// existing label or annotation will be overridden if its key matches a common one.
class CommonMetadata {
  /// Annotations to be added to the object's metadata.
  annotations: Mapping<String, String>?

  /// Labels to be added to the object's metadata.
  labels: Mapping<String, String>?
}

/// Decrypt Kubernetes secrets before applying them on the cluster.
class Decryption {
  /// Provider is the name of the decryption engine.
  provider: "sops"

  /// The secret name containing the private OpenPGP keys used for decryption.
  secretRef: SecretRef?
}

/// The secret name containing the private OpenPGP keys used for decryption.
class SecretRef {
  /// Name of the referent.
  name: String
}

/// NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource
/// object in any namespace.
class DependsOn {
  /// Name of the referent.
  name: String

  /// Namespace of the referent, when not specified it acts as LocalObjectReference.
  namespace: String?
}

/// NamespacedObjectKindReference contains enough information to locate the typed referenced Kubernetes
/// resource object in any namespace.
class HealthCheck {
  /// API version of the referent, if not specified the Kubernetes preferred version will be used.
  apiVersion: String?

  /// Kind of the referent.
  kind: String

  /// Name of the referent.
  name: String

  /// Namespace of the referent, when not specified it acts as LocalObjectReference.
  namespace: String?
}

/// Image contains an image name, a new name, a new tag or digest, which will replace the original name
/// and tag.
class Image {
  /// Digest is the value used to replace the original image tag. If digest is present NewTag value is
  /// ignored.
  digest: String?

  /// Name is a tag-less image name.
  name: String

  /// NewName is the value used to replace the original name.
  newName: String?

  /// NewTag is the value used to replace the original tag.
  newTag: String?
}

/// The KubeConfig for reconciling the Kustomization on a remote cluster. When used in combination with
/// KustomizationSpec.ServiceAccountName, forces the controller to act on behalf of that Service Account
/// at the target cluster. If the --default-service-account flag is set, its value will be used as a
/// controller level fallback for when KustomizationSpec.ServiceAccountName is empty.
class KubeConfig {
  /// SecretRef holds the name of a secret that contains a key with the kubeconfig file as the value. If
  /// no key is set, the key will default to 'value'. It is recommended that the kubeconfig is
  /// self-contained, and the secret is regularly updated if credentials such as a cloud-access-token
  /// expire. Cloud specific `cmd-path` auth helpers will not function without adding binaries and
  /// credentials to the Pod that is responsible for reconciling Kubernetes resources.
  secretRef: KubeConfigSecretRef
}

/// SecretRef holds the name of a secret that contains a key with the kubeconfig file as the value. If no
/// key is set, the key will default to 'value'. It is recommended that the kubeconfig is self-contained,
/// and the secret is regularly updated if credentials such as a cloud-access-token expire. Cloud
/// specific `cmd-path` auth helpers will not function without adding binaries and credentials to the Pod
/// that is responsible for reconciling Kubernetes resources.
class KubeConfigSecretRef {
  /// Key in the Secret, when not specified an implementation-specific default key is used.
  key: String?

  /// Name of the Secret.
  name: String
}

/// Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should be applied
/// to.
class Patch {
  /// Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with an array of
  /// operation objects.
  patch: String

  /// Target points to the resources that the patch document should be applied to.
  target: Target?
}

/// Target points to the resources that the patch document should be applied to.
class Target {
  /// AnnotationSelector is a string that follows the label selection expression
  /// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the
  /// resource annotations.
  annotationSelector: String?

  /// Group is the API group to select resources from. Together with Version and Kind it is capable of
  /// unambiguously identifying and/or selecting resources.
  /// https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
  group: String?

  /// Kind of the API Group to select resources from. Together with Group and Version it is capable of
  /// unambiguously identifying and/or selecting resources.
  /// https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
  kind: String?

  /// LabelSelector is a string that follows the label selection expression
  /// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api It matches with the
  /// resource labels.
  labelSelector: String?

  /// Name to match resources with.
  name: String?

  /// Namespace to select resources from.
  namespace: String?

  /// Version of the API Group to select resources from. Together with Group and Kind it is capable of
  /// unambiguously identifying and/or selecting resources.
  /// https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
  version: String?
}

/// PostBuild describes which actions to perform on the YAML manifest generated by building the kustomize
/// overlay.
class PostBuild {
  /// Substitute holds a map of key/value pairs. The variables defined in your YAML manifests that match
  /// any of the keys defined in the map will be substituted with the set value. Includes support for
  /// bash string replacement functions e.g. ${var:=default}, ${var:position} and
  /// ${var/substring/replacement}.
  substitute: Mapping<String, String>?

  /// SubstituteFrom holds references to ConfigMaps and Secrets containing the variables and their values
  /// to be substituted in the YAML manifests. The ConfigMap and the Secret data keys represent the var
  /// names, and they must match the vars declared in the manifests for the substitution to happen.
  substituteFrom: Listing<SubstituteFrom>?
}

/// SubstituteReference contains a reference to a resource containing the variables name and value.
class SubstituteFrom {
  /// Kind of the values referent, valid values are ('Secret', 'ConfigMap').
  kind: "Secret"|"ConfigMap"

  /// Name of the values referent. Should reside in the same namespace as the referring resource.
  name: String(length.isBetween(1, 253))

  /// Optional indicates whether the referenced resource must exist, or whether to tolerate its absence.
  /// If true and the referenced resource is absent, proceed as if the resource was present but empty,
  /// without any variables defined.
  ///
  /// Default if undefined: `false`
  optional: Boolean?
}

/// Reference of the source where the kustomization file is.
class SourceRef {
  /// API version of the referent.
  apiVersion: String?

  /// Kind of the referent.
  kind: "OCIRepository"|"GitRepository"|"Bucket"

  /// Name of the referent.
  name: String

  /// Namespace of the referent, defaults to the namespace of the Kubernetes resource object that
  /// contains the reference.
  namespace: String?
}

/// KustomizationStatus defines the observed state of a kustomization.
///
/// Default if undefined: `{ ["observedGeneration"] = -1 }`
class Status {
  conditions: Listing<Condition>?

  /// Inventory contains the list of Kubernetes resource object references that have been successfully
  /// applied.
  inventory: Inventory?

  /// The last successfully applied revision. Equals the Revision of the applied Artifact from the
  /// referenced Source.
  lastAppliedRevision: String?

  /// LastAttemptedRevision is the revision of the last reconciliation attempt.
  lastAttemptedRevision: String?

  /// LastHandledReconcileAt holds the value of the most recent reconcile request value, so a change of
  /// the annotation value can be detected.
  lastHandledReconcileAt: String?

  /// ObservedGeneration is the last reconciled generation.
  observedGeneration: Int?
}

/// Condition contains details for one aspect of the current state of this API Resource.
class Condition {
  /// lastTransitionTime is the last time the condition transitioned from one status to another. This
  /// should be when the underlying condition changed. If that is not known, then using the time when the
  /// API field changed is acceptable.
  lastTransitionTime: String

  /// message is a human readable message indicating details about the transition. This may be an empty
  /// string.
  message: String(length <= 32768)

  /// observedGeneration represents the .metadata.generation that the condition was set based upon. For
  /// instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
  /// is 9, the condition is out of date with respect to the current state of the instance.
  observedGeneration: Int(isPositive)?

  /// reason contains a programmatic identifier indicating the reason for the condition's last
  /// transition. Producers of specific condition types may define expected values and meanings for this
  /// field, and whether the values are considered a guaranteed API. The value should be a CamelCase
  /// string. This field may not be empty.
  reason: String(length.isBetween(1, 1024), matches(Regex("^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")))

  /// status of the condition, one of True, False, Unknown.
  status: "True"|"False"|"Unknown"

  /// type of condition in CamelCase or in foo.example.com/CamelCase.
  type: String(length <= 316, matches(Regex(#"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"#)))
}

/// Inventory contains the list of Kubernetes resource object references that have been successfully
/// applied.
class Inventory {
  /// Entries of Kubernetes resource object references.
  entries: Listing<Entry>
}

/// ResourceRef contains the information necessary to locate a resource within a cluster.
class Entry {
  /// ID is the string representation of the Kubernetes resource object's metadata, in the format
  /// '<namespace>_<name>_<group>_<kind>'.
  id: String

  /// Version is the API version of the Kubernetes resource object's kind.
  v: String
}
